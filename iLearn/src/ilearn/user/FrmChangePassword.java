/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmChangePassword.java
 *
 * Created on Jun 2, 2011, 4:28:49 PM
 */
package ilearn.user;

import ilearn.kernel.EncryptionHandler;
import ilearn.kernel.Utilities;
import org.jdesktop.application.Action;

/**
 *
 * @author m.rogers
 */
public class FrmChangePassword extends javax.swing.JInternalFrame
{

    int tryCounter = 0;

    /** Creates new form FrmChangePassword */
    public FrmChangePassword()
    {
        initComponents();
        txtCurrentUser.setText(User.getUserName());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        Panel = new javax.swing.JPanel();
        lblCurrentPassword = new javax.swing.JLabel();
        lblNewPassword = new javax.swing.JLabel();
        lblRepeatPassword = new javax.swing.JLabel();
        txtCurrent = new javax.swing.JPasswordField();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirm = new javax.swing.JPasswordField();
        cmdCancel = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        lblCurrentUser = new javax.swing.JLabel();
        txtCurrentUser = new javax.swing.JTextField();
        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ilearn.ILearnApp.class).getContext().getResourceMap(FrmChangePassword.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFrameIcon(resourceMap.getIcon("Form.frameIcon")); // NOI18N
        setName("Form"); // NOI18N
        Panel.setName("Panel"); // NOI18N
        lblCurrentPassword.setText(resourceMap.getString("lblCurrentPassword.text")); // NOI18N
        lblCurrentPassword.setName("lblCurrentPassword"); // NOI18N
        lblNewPassword.setText(resourceMap.getString("lblNewPassword.text")); // NOI18N
        lblNewPassword.setName("lblNewPassword"); // NOI18N
        lblRepeatPassword.setText(resourceMap.getString("lblRepeatPassword.text")); // NOI18N
        lblRepeatPassword.setName("lblRepeatPassword"); // NOI18N
        txtCurrent.setText(resourceMap.getString("txtCurrent.text")); // NOI18N
        txtCurrent.setName("txtCurrent"); // NOI18N
        txtPassword.setText(resourceMap.getString("txtPassword.text")); // NOI18N
        txtPassword.setName("txtPassword"); // NOI18N
        txtConfirm.setText(resourceMap.getString("txtConfirm.text")); // NOI18N
        txtConfirm.setName("txtConfirm"); // NOI18N
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(ilearn.ILearnApp.class).getContext().getActionMap(FrmChangePassword.class, this);
        cmdCancel.setAction(actionMap.get("cancel")); // NOI18N
        cmdCancel.setText(resourceMap.getString("cmdCancel.text")); // NOI18N
        cmdCancel.setName("cmdCancel"); // NOI18N
        cmdSave.setAction(actionMap.get("save")); // NOI18N
        cmdSave.setText(resourceMap.getString("cmdSave.text")); // NOI18N
        cmdSave.setName("cmdSave"); // NOI18N
        lblCurrentUser.setText(resourceMap.getString("lblCurrentUser.text")); // NOI18N
        lblCurrentUser.setName("lblCurrentUser"); // NOI18N
        txtCurrentUser.setEditable(false);
        txtCurrentUser.setText(resourceMap.getString("txtCurrentUser.text")); // NOI18N
        txtCurrentUser.setName("txtCurrentUser"); // NOI18N
        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelLayout.createSequentialGroup()
                                          .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addComponent(lblCurrentPassword)
                                                  .addComponent(lblNewPassword)
                                                  .addComponent(lblRepeatPassword)
                                                  .addComponent(lblCurrentUser))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addComponent(txtConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                                  .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                                  .addComponent(txtCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                                                  .addComponent(txtCurrentUser, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                                          .addComponent(cmdSave)
                                          .addGap(18, 18, 18)
                                          .addComponent(cmdCancel)))
                      .addContainerGap())
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCurrentUser)
                                .addComponent(txtCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCurrentPassword)
                                .addComponent(txtCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNewPassword)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblRepeatPassword)
                                .addComponent(txtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 15, Short.MAX_VALUE)
                      .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmdCancel)
                                .addComponent(cmdSave))
                      .addContainerGap())
        );
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void cancel()
    {
        Utilities.showCancelScreen(this);
    }

    @Action
    public void save()
    {
        String password = String.valueOf(txtCurrent.getPassword()).trim();
        if (User.logIn(User.getUserName(), password))
        {
            String newPassword = String.valueOf(txtPassword.getPassword());
            String confirm = String.valueOf(txtConfirm.getPassword());
            if (newPassword.equals(confirm))
            {
                newPassword = EncryptionHandler.encryptPassword(newPassword);
                if (User.changePassword(User.getUserName(), newPassword))
                {
                    String message = "Your password was successfully changed.";
                    Utilities.showInfoMessage(rootPane, message);
                    return;
                }
                else // If it doesn't get added tell the user something went wrong.
                {
                    String message = "An error occurred while changing your password.\n"
                            + "Kindly verify your information and try again.\n"
                            + "If the problem persists, kindly contact your system administrator.";
                    Utilities.showErrorMessage(rootPane, message);
                }
                return;
            }
            else
            {
                String message = "The passwords you have entered doesn't match.\n"
                        + "Kindly try again.";
                Utilities.showWarningMessage(rootPane, message);
                return;
            }
        }
        else
        {
            String message = "The password you have entered doesn't match your currently saved password.\n"
                    + "Kindly try again.";
            Utilities.showWarningMessage(rootPane, message);
            tryCounter++;
            if (tryCounter >= 3)
            {
                message = "You have failed to enter the correct password three times.\n"
                        + "The application will now exit.";
                Utilities.showErrorMessage(rootPane, message);
                ilearn.ILearnApp.getApplication().exit();
            }
            return;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdSave;
    private javax.swing.JLabel lblCurrentPassword;
    private javax.swing.JLabel lblCurrentUser;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JLabel lblRepeatPassword;
    private javax.swing.JPasswordField txtConfirm;
    private javax.swing.JPasswordField txtCurrent;
    private javax.swing.JTextField txtCurrentUser;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
