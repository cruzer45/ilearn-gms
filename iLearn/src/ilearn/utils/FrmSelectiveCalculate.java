/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmSelectiveCalculate.java
 *
 * Created on Mar 29, 2012, 9:50:43 PM
 */
package ilearn.utils;

import ilearn.classes.Classes;
import ilearn.grades.Grade;
import ilearn.kernel.TableColumnAdjuster;
import ilearn.kernel.Utilities;
import ilearn.kernel.logger.iLogger;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;

/**
 *
 * @author mrogers
 */
public class FrmSelectiveCalculate extends javax.swing.JInternalFrame
{

    /** Creates new form FrmSelectiveCalculate */
    public FrmSelectiveCalculate()
    {
        initComponents();
        populateLists();
    }

    private void populateLists()
    {
        tblClasses.setModel(Classes.getSelectableClassTable());
        TableColumnAdjuster tca = new TableColumnAdjuster(tblClasses);
        tca.adjustColumns();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClasses = new javax.swing.JTable();
        cmdCancel = new javax.swing.JButton();
        cmdGenerate = new javax.swing.JButton();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Generate Finals");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/ilearn/resources/calendar.png"))); // NOI18N
        jLabel1.setText("This form generate the final grades for the classes you specify.");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setName("jLabel1"); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N
        tblClasses.setModel(new javax.swing.table.DefaultTableModel(
                                new Object [][]
                                {

                                },
                                new String []
                                {
                                    "Generate", "Class", "Home Room"
                                }
                            ));
        tblClasses.setName("tblClasses"); // NOI18N
        jScrollPane1.setViewportView(tblClasses);
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(FrmSelectiveCalculate.class, this);
        cmdCancel.setAction(actionMap.get("cancel")); // NOI18N
        cmdCancel.setName("cmdCancel"); // NOI18N
        cmdGenerate.setAction(actionMap.get("generateGrades")); // NOI18N
        cmdGenerate.setName("cmdGenerate"); // NOI18N
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                          .addComponent(cmdGenerate)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addComponent(cmdCancel))
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE))
                      .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                      .addContainerGap()
                      .addComponent(jLabel1)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmdCancel)
                                .addComponent(cmdGenerate))
                      .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void cancel()
    {
        Utilities.showCancelScreen(this);
    }

    @Action(block = Task.BlockingScope.COMPONENT)
    public Task generateGrades()
    {
        return new GenerateGradesTask(org.jdesktop.application.Application.getInstance());
    }

    private class GenerateGradesTask extends org.jdesktop.application.Task<Object, Void>
    {

        ArrayList<String> selectedClasses = new ArrayList<String>();
        ArrayList<String> rejectedClasses = new ArrayList<String>();
        boolean calculate = false;

        GenerateGradesTask(org.jdesktop.application.Application app)
        {
            super(app);
            for (int i = 0; i < tblClasses.getRowCount(); i++)
            {
                boolean selected = Boolean.valueOf(tblClasses.getValueAt(i, 0).toString());
                String currentClass = tblClasses.getValueAt(i, 2).toString();
                if (selected)
                {
                    boolean actionRan = iLogger.checkAction(Grade.generateClassMessage + currentClass);
                    if (!actionRan)
                    {
                        selectedClasses.add(currentClass);
                    }
                    else
                    {
                        rejectedClasses.add(currentClass);
                    }
                }
            }
            if (selectedClasses.isEmpty() && rejectedClasses.isEmpty())
            {
                String message = "You need to select at least one class to generate grades for.";
                Utilities.showWarningMessage(rootPane, message);
            }
            else if (selectedClasses.isEmpty() && !rejectedClasses.isEmpty())
            {
                String message = "Grades have already been generated for the selected classes.";
                Utilities.showWarningMessage(rootPane, message);
            }
            else if (!selectedClasses.isEmpty() && !rejectedClasses.isEmpty())
            {
                String message = "The grades for the classes below have already been generated.\n\n"
                                 + "They will be ignored.\n\n";
                for (String string : rejectedClasses)
                {
                    message += string + "\n";
                }
                Utilities.showWarningMessage(rootPane, message);
                message = "Are you sure you want to calculate grades for the selected classes?";
                int response = Utilities.showConfirmDialog(rootPane, message);
                if (response == JOptionPane.YES_OPTION)
                {
                    calculate = true;
                }
            }
            else
            {
                String message = "Are you sure you want to calculate grades for the selected classes?";
                int response = Utilities.showConfirmDialog(rootPane, message);
                if (response == JOptionPane.YES_OPTION)
                {
                    calculate = true;
                }
            }
        }

        @Override
        protected Object doInBackground()
        {
            if (calculate)
            {
                setMessage("Calculating Grades");
                Grade.calculateSelectedFinalGrades(selectedClasses);
            }
            return null;  // return your result
        }

        @Override
        protected void succeeded(Object result)
        {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdGenerate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClasses;
    // End of variables declaration//GEN-END:variables
}
