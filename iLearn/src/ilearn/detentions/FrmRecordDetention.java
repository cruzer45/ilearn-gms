/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmRecordDetention.java
 *
 * Created on Jul 25, 2011, 11:23:31 PM
 */
package ilearn.detentions;

import ilearn.kernel.TableColumnAdjuster;
import ilearn.kernel.Utilities;
import ilearn.student.Student;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author mrogers
 */
public class FrmRecordDetention extends javax.swing.JInternalFrame
{

    String warnings = "";

    /** Creates new form FrmRecordDetention */
    public FrmRecordDetention()
    {
        initComponents();
        populateLists();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        wrapperPanel = new javax.swing.JPanel();
        detentionTabbedPane = new javax.swing.JTabbedPane();
        searchPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        cmdNext = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        cmdSearch = new javax.swing.JButton();
        detentionPanel = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblRemarks = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        cmbType = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRemarks = new javax.swing.JTextArea();
        calDate = new com.toedter.calendar.JDateChooser();
        cmdCancel = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        cmdReset = new javax.swing.JButton();
        setClosable(true);
        setIconifiable(true);
        setTitle("Record Detention");
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(FrmRecordDetention.class);
        setFrameIcon(resourceMap.getIcon("frameIcon")); // NOI18N
        wrapperPanel.setName("wrapperPanel"); // NOI18N
        detentionTabbedPane.setName("detentionTabbedPane"); // NOI18N
        searchPanel.setName("searchPanel"); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N
        tblStudents.setAutoCreateRowSorter(true);
        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
                                 new Object [][]
                                 {

                                 },
                                 new String []
                                 {
                                     "ID", "First Name", "Last Name", "Class"
                                 }
                             ));
        tblStudents.setName("tblStudents"); // NOI18N
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tblStudentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudents);
        tblStudents.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(FrmRecordDetention.class, this);
        cmdNext.setAction(actionMap.get("next")); // NOI18N
        cmdNext.setName("cmdNext"); // NOI18N
        lblSearch.setText("Search:");
        lblSearch.setName("lblSearch"); // NOI18N
        txtSearch.setName("txtSearch"); // NOI18N
        cmdSearch.setAction(actionMap.get("search")); // NOI18N
        cmdSearch.setName("cmdSearch"); // NOI18N
        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchPanelLayout.createSequentialGroup()
                                          .addComponent(lblSearch)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(cmdSearch))
                                .addComponent(cmdNext))
                      .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSearch)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmdSearch))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                      .addComponent(cmdNext)
                      .addContainerGap())
        );
        detentionTabbedPane.addTab("Search Student", new javax.swing.ImageIcon(getClass().getResource("/ilearn/resources/find.png")), searchPanel); // NOI18N
        detentionPanel.setName("detentionPanel"); // NOI18N
        lblID.setText("ID:");
        lblID.setName("lblID"); // NOI18N
        lblName.setText("Name:");
        lblName.setName("lblName"); // NOI18N
        lblDate.setText("Date:");
        lblDate.setName("lblDate"); // NOI18N
        lblType.setText("Type:");
        lblType.setName("lblType"); // NOI18N
        lblRemarks.setText("Remarks:");
        lblRemarks.setName("lblRemarks"); // NOI18N
        txtID.setEditable(false);
        txtID.setName("txtID"); // NOI18N
        txtName.setEditable(false);
        txtName.setName("txtName"); // NOI18N
        cmbType.setEditable(true);
        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        cmbType.setName("cmbType"); // NOI18N
        jScrollPane2.setName("jScrollPane2"); // NOI18N
        txtRemarks.setColumns(20);
        txtRemarks.setRows(5);
        txtRemarks.setName("txtRemarks"); // NOI18N
        jScrollPane2.setViewportView(txtRemarks);
        calDate.setName("calDate"); // NOI18N
        javax.swing.GroupLayout detentionPanelLayout = new javax.swing.GroupLayout(detentionPanel);
        detentionPanel.setLayout(detentionPanelLayout);
        detentionPanelLayout.setHorizontalGroup(
            detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detentionPanelLayout.createSequentialGroup()
                      .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(detentionPanelLayout.createSequentialGroup()
                                          .addContainerGap()
                                          .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addComponent(lblID)
                                                  .addComponent(lblName)
                                                  .addComponent(lblType)
                                                  .addComponent(lblRemarks))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                  .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                                  .addComponent(cmbType, 0, 241, Short.MAX_VALUE)
                                                  .addComponent(calDate, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                                  .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                                  .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)))
                                .addGroup(detentionPanelLayout.createSequentialGroup()
                                          .addGap(12, 12, 12)
                                          .addComponent(lblDate)))
                      .addContainerGap())
        );
        detentionPanelLayout.setVerticalGroup(
            detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detentionPanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblID)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblName)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(lblDate)
                                .addComponent(calDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblType)
                                .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addGroup(detentionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblRemarks)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addContainerGap(42, Short.MAX_VALUE))
        );
        detentionTabbedPane.addTab("Detention", new javax.swing.ImageIcon(getClass().getResource("/ilearn/resources/clock_red.png")), detentionPanel); // NOI18N
        cmdCancel.setAction(actionMap.get("cancel")); // NOI18N
        cmdCancel.setName("cmdCancel"); // NOI18N
        cmdSave.setAction(actionMap.get("save")); // NOI18N
        cmdSave.setName("cmdSave"); // NOI18N
        cmdReset.setAction(actionMap.get("resetForm")); // NOI18N
        cmdReset.setName("cmdReset"); // NOI18N
        javax.swing.GroupLayout wrapperPanelLayout = new javax.swing.GroupLayout(wrapperPanel);
        wrapperPanel.setLayout(wrapperPanelLayout);
        wrapperPanelLayout.setHorizontalGroup(
            wrapperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wrapperPanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(wrapperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(detentionTabbedPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                .addGroup(wrapperPanelLayout.createSequentialGroup()
                                          .addComponent(cmdReset)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                                          .addComponent(cmdSave)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addComponent(cmdCancel)))
                      .addContainerGap())
        );
        wrapperPanelLayout.setVerticalGroup(
            wrapperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wrapperPanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addComponent(detentionTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                      .addGroup(wrapperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmdCancel)
                                .addComponent(cmdSave)
                                .addComponent(cmdReset))
                      .addContainerGap())
        );
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrapperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrapperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tblStudentsMouseClicked
    {
//GEN-HEADEREND:event_tblStudentsMouseClicked
        if (evt.getClickCount() >= 2)
        {
            loadSelectedUser();
            next();
        }
    }//GEN-LAST:event_tblStudentsMouseClicked

    @Action
    public void cancel()
    {
        Utilities.showCancelScreen(this);
    }

    @Action
    public void resetForm()
    {
        remove(wrapperPanel);
        initComponents();
        populateLists();
        detentionTabbedPane.setSelectedIndex(0);
    }

    private void populateLists()
    {
        calDate.setDate(new Date());
        ArrayList<String> detionTypes = Detention.getDetentionTypes();
        detionTypes.add("--- Select One ---");
        cmbType.setModel(new DefaultComboBoxModel(detionTypes.toArray()));
    }

    @Action
    public void save()
    {
        if (!passedValidation())
        {
            Utilities.showWarningMessage(rootPane, warnings);
            return;
        }
        String stuID = txtID.getText().trim();
        String detDate = Utilities.YMD_Formatter.format(calDate.getDate());
        String detPunishment = cmbType.getSelectedItem().toString();
        String detRemark = txtRemarks.getText().trim();
        boolean detentionAdded = Detention.saveDetention(stuID, detDate, detPunishment, detRemark);
        if (detentionAdded)
        {
            String message = "The detention was successfully added to the student's file. \n"
                             + "Would you like to add another?";
            int response = Utilities.showConfirmDialog(rootPane, message);
            if (response == JOptionPane.YES_OPTION)
            {
                resetForm();
            }
            else
            {
                this.dispose();
            }
        }
        else
        {
            String message = "An error occurred while trying to save this entry.\n"
                             + "Kindly verify your information and try again.";
            Utilities.showErrorMessage(rootPane, message);
        }
    }

    private boolean passedValidation()
    {
        warnings = "";
        boolean passed = true;
        String id = txtID.getText().trim();
        String type = cmbType.getSelectedItem().toString().trim();
        String remark = txtRemarks.getText().trim();
        if (id.isEmpty())
        {
            warnings += "Kindly select a student before proceeding.\n";
            passed = false;
        }
        if (type.isEmpty() || type.equals("--- Select One ---"))
        {
            warnings += "Kindly select a type of detention before proceeding.\n"
                        + "You may choose one from the predefined list.";
            passed = false;
        }
        if (remark.isEmpty())
        {
            warnings += "Kindly enter the reason the student recieved this dention in the remarks feild.";
            passed = false;
        }
        return passed;
    }

    private void loadSelectedUser()
    {
        if (tblStudents.getSelectedRow() != -1)
        {
            txtID.setText(tblStudents.getValueAt(tblStudents.getSelectedRow(), 0).toString());
            String name = tblStudents.getValueAt(tblStudents.getSelectedRow(), 1).toString() + " " + tblStudents.getValueAt(tblStudents.getSelectedRow(), 2).toString();
            txtName.setText(name);
        }
    }

    @Action
    public void next()
    {
        if (tblStudents.getSelectedRow() != -1)
        {
            loadSelectedUser();
            detentionTabbedPane.setSelectedIndex(detentionTabbedPane.getSelectedIndex() + 1);
        }
        else
        {
            String message = "Kindly select a student before proceeding";
            Utilities.showWarningMessage(rootPane, message);
        }
    }

    @Action
    public void search()
    {
        String criteria = txtSearch.getText().trim();
        tblStudents.setModel(Student.searchStudents(criteria));
        TableColumnAdjuster tca = new TableColumnAdjuster(tblStudents);
        tca.adjustColumns();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser calDate;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdNext;
    private javax.swing.JButton cmdReset;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdSearch;
    private javax.swing.JPanel detentionPanel;
    private javax.swing.JTabbedPane detentionTabbedPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRemarks;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblType;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtRemarks;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JPanel wrapperPanel;
    // End of variables declaration//GEN-END:variables
}
