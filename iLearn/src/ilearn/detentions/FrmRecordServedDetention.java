/*
 * FrmRecordDemeritStudent.java
 *
 * Created on Jul 13, 2011, 8:44:43 PM
 */
package ilearn.detentions;

import ilearn.kernel.TableColumnAdjuster;
import ilearn.kernel.Utilities;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author mrogers
 */
public class FrmRecordServedDetention extends javax.swing.JInternalFrame
{

    static final Logger logger = Logger.getLogger(FrmRecordServedDetention.class.getName());

    /** Creates new form FrmRecordDemeritStudent */
    public FrmRecordServedDetention()
    {
        initComponents();
        populateLists();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        searchPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetentions = new javax.swing.JTable();
        cmdCancel = new javax.swing.JButton();
        cmdSave = new javax.swing.JButton();
        calDateServed = new com.toedter.calendar.JDateChooser();
        lblDateServed = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(FrmRecordServedDetention.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFrameIcon(resourceMap.getIcon("Form.frameIcon")); // NOI18N
        setName("Form"); // NOI18N
        searchPanel.setName("searchPanel"); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N
        tblDetentions.setAutoCreateRowSorter(true);
        tblDetentions.setModel(new javax.swing.table.DefaultTableModel(
                                   new Object [][]
                                   {

                                   },
                                   new String []
                                   {
                                       "ID", "Name", "Class"
                                   }
                               ));
        tblDetentions.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblDetentions.setName("tblDetentions"); // NOI18N
        jScrollPane1.setViewportView(tblDetentions);
        tblDetentions.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(FrmRecordServedDetention.class, this);
        cmdCancel.setAction(actionMap.get("cancel")); // NOI18N
        cmdCancel.setText(resourceMap.getString("cmdCancel.text")); // NOI18N
        cmdCancel.setName("cmdCancel"); // NOI18N
        cmdSave.setAction(actionMap.get("save")); // NOI18N
        cmdSave.setText(resourceMap.getString("cmdSave.text")); // NOI18N
        cmdSave.setName("cmdSave"); // NOI18N
        calDateServed.setName("calDateServed"); // NOI18N
        lblDateServed.setText(resourceMap.getString("lblDateServed.text")); // NOI18N
        lblDateServed.setName("lblDateServed"); // NOI18N
        jButton1.setAction(actionMap.get("resetForm")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                      .addContainerGap()
                      .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                                          .addComponent(jButton1)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                                          .addComponent(cmdSave)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addComponent(cmdCancel))
                                .addGroup(searchPanelLayout.createSequentialGroup()
                                          .addComponent(lblDateServed)
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addComponent(calDateServed, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)))
                      .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                      .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                      .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(calDateServed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDateServed))
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                      .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmdCancel)
                                .addComponent(cmdSave)
                                .addComponent(jButton1))
                      .addContainerGap())
        );
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateLists()
    {
        tblDetentions.setModel(Detention.getPendingDetentionsTable());
        TableColumnAdjuster tca = new TableColumnAdjuster(tblDetentions);
        tca.adjustColumns();
        calDateServed.setDate(new Date());
    }

    @Action
    public void cancel()
    {
        Utilities.showCancelScreen(this);
    }

    @Action
    public void save()
    {
        String date = Utilities.YMD_Formatter.format(calDateServed.getDate());
        ArrayList<String> IDs = new ArrayList<String>();
        for (int i = 0; i < tblDetentions.getRowCount(); i++)
        {
            boolean served = Boolean.valueOf(tblDetentions.getValueAt(i, 4).toString());
            if (served)
            {
                String id = tblDetentions.getValueAt(i, 0).toString();
                IDs.add(id);
            }
        }
        //check if any changes were made to see if it maes sence to proceed
        if (IDs.size() < 1)
        {
            String message = "You have no detentions marked as served.\n"
                             + "Kindly select at least one to proceed.";
            Utilities.showWarningMessage(rootPane, message);
            return;
        }
        if (!passedConfirmation()) // Comfirm that the user wants to mark these detentions as served.
        {
            return;
        }
        boolean detentionsServed = Detention.updateServedDetentions(IDs, date);
        if (detentionsServed)
        {
            String message = "The detention was successfully marked as served. \n"
                             + "Would you like to edit others?";
            int response = Utilities.showConfirmDialog(rootPane, message);
            if (response == JOptionPane.YES_OPTION)
            {
                resetForm();
            }
            else
            {
                this.dispose();
            }
        }
        else
        {
            String message = "An error occurred while trying to mark the detntion(s) as served.\n"
                             + "Kindly verify your information and try again.";
            Utilities.showErrorMessage(rootPane, message);
        }
    }

    @Action
    public void resetForm()
    {
        remove(searchPanel);
        initComponents();
        populateLists();
    }

    private boolean passedConfirmation()
    {
        String message = "Are you sure you want to mark these detentions as served?";
        int response = Utilities.showConfirmDialog(rootPane, message);
        if (response == JOptionPane.YES_OPTION)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser calDateServed;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDateServed;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable tblDetentions;
    // End of variables declaration//GEN-END:variables
}
